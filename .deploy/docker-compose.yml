version: '3'

volumes:
    db-data:
        driver: local

networks:
    service:
        driver: bridge

services:
    proxy:
        build:
            context: proxy
            dockerfile: Dockerfile
            args:
                CONFIG_FILE: backend.conf
        container_name: ${LOCAL_USER:-www}-proxy-local
        image: proxy-local
        environment:
            NGINX_SERVER: ${NGINX_SERVER:-localhost}
        depends_on:
            - backend-api
            - adminer
        volumes:
            - ../hootel-booking:/app
            - ./proxy/backend.conf:/etc/nginx/templates/default.conf.template
        ports:
            - "${PROXY_PORT:-80}:80"
        networks:
            - service
        restart: unless-stopped

    backend:
        build:
            context: ..
            dockerfile: .deploy/Dockerfile
            args:
                USER: ${LOCAL_USER:-www}
        image: backend-local
        entrypoint: [ "/usr/bin/supervisord", "-n" ]
        container_name: backend-local
        environment:
            - APP_ENV=local
            - APP_DEBUG=true
            - DB_CONNECTION=pgsql
            - DB_HOST=db
            - DB_PORT=5432
            - DB_DATABASE=${DB_NAME:-laravel}
            - DB_USERNAME=${DB_USERNAME:-postgres}
            - DB_PASSWORD=${DB_PASSWORD:-QWEasd123@}
        volumes:
            - ../hootel-booking:/app
        networks:
            - service
        restart: unless-stopped
        depends_on:
            db:
                condition: service_healthy

    backend-api:
        build:
            context: ..
            dockerfile: .deploy/nginx/Dockerfile
        image: backend-api-local
        container_name: backend-api-local
        volumes:
            - ../hootel-booking:/app
        networks:
            - service
        restart: unless-stopped
        depends_on:
            - backend

    db:
        image: postgres:15-alpine3.17
        container_name: db-local
        volumes:
            - db-data:/var/lib/postgresql/data
        networks:
            - service
        restart: unless-stopped
        ports:
            - "${DB_PORT:-5432}:5432"
        environment:
            POSTGRES_DB: ${DB_NAME:-laravel}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-QWEasd123@}
            POSTGRES_USER: ${DB_USERNAME:-postgres}
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_NAME:-laravel}" ]
            interval: 5s
            timeout: 25s
            retries: 10

    adminer:
        image: adminer
        container_name: adminer-local
        restart: unless-stopped
        networks:
            - service
        depends_on:
            - db
